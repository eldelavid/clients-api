image:
  name: registry.gitlab.com/gitlab-org/terraform-images/stable:latest

variables:
  TF_ROOT: terraform/modules/eks-cluster/  # The relative path to the root directory of the Terraform project
  TF_STATE_NAME: default  # The name of the state file used by the GitLab Managed Terraform state backend

cache:
  key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/


stages:
  - init
  - validate
  - build
  - deploy
  - cleanup


terraform:init: &terraform_init
  stage: init
  script:
    - cd ${TF_ROOT}
    - gitlab-terraform init

terraform:validate: &terraform_validate
  stage: validate
  script:
    - cd ${TF_ROOT}
    - gitlab-terraform validate

terraform:build: &terraform_build
  stage: build
  script:
    - cd ${TF_ROOT}
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  resource_group: ${TF_STATE_NAME}
  artifacts:
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

terraform:deploy: &terraform_deploy
  stage: deploy
  script:
    - cd ${TF_ROOT}
    - gitlab-terraform apply
  resource_group: ${TF_STATE_NAME}
  artifacts:
    paths:
      - ${TF_ROOT}/*.tfstate
    reports:
      terraform: ${TF_ROOT}/${TF_STATE_NAME}

  when: manual
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

terraform:destroy: &terraform_destroy
  stage: cleanup
  script:
    - cd ${TF_ROOT}
    - gitlab-terraform destroy
  resource_group: ${TF_STATE_NAME}
  when: manual
